<?php
$docRoot = "../";
include_once $docRoot . "config/config.php";
include_once $docRoot . "inc/common.php";
include_once $docRoot . "lib/Session.php";
require_once $docRoot . "vendor/autoload.php";
$snowflake = new \Godruoyi\Snowflake\Snowflake;
include_once $docRoot . "classes/Opportunities.php";
include_once $docRoot . "classes/Users.php";
include_once $docRoot . "classes/Solvers.php";
include_once $docRoot . "classes/Matches.php";
include_once $docRoot . "classes/Skills.php";
Session::init();
$opportunities = new Opportunities();
$users = new Users();
$solvers = new Solvers();
$matches = new Matches();
$skills = new Skills();
$userid = $users->getRealId(Session::get('userid'));
if ($_POST['action'] == 'getallsolver') {
  $allLatessolvers = $solvers->advancedGetAllLatesSolvers($userid);
  makeSolverCards($allLatessolvers);
}
if ($_POST['action'] == 'searchResult' && $_POST['query'] == '' && $_POST['industry'] == '' && $_POST['technology'] == '' && $_POST['specialty'] == '') {
  $allLatessolvers = $solvers->advancedGetAllLatesSolvers($userid);
  makeSolverCards($allLatessolvers);
} elseif ($_POST['action'] == 'searchResult' && $_POST['query'] != '' && ($_POST['industry'] != '' || $_POST['technology'] != '' || $_POST['specialty'] != '')) {
  //print_r('we are here');
  $searcedSolver = $solvers->advancedSearchWithFilter($_POST['query'], $_POST['industry'], $_POST['technology'], $_POST['specialty'], $userid);
  makeSolverCards($searcedSolver);
} elseif ($_POST['action'] == 'searchResult' && $_POST['query'] == '' && ($_POST['industry'] != '' || $_POST['technology'] != '' || $_POST['specialty'] != '' || $_POST['loaction'] != '')) {
  //print_r('we are here');
  //$searcedSolver = $solvers->advancedSearchWithFilter($_POST['query'],$_POST['industry'],$_POST['technology'],$_POST['specialty'],$userid);
  $onlyfilteredSolver = $solvers->advancedSolverFilter($_POST['industry'], $_POST['technology'], $_POST['specialty'], $_POST['loaction'], $userid);

  makeSolverCards($onlyfilteredSolver);
} elseif ($_POST['action'] == 'searchResult' && $_POST['query'] != '' && $_POST['industry'] == '' && $_POST['technology'] == '' && $_POST['specialty'] == '') {
  //print_r('i am called');
  $searcedSolver = $solvers->advancedSolverSearch($_POST['query'], $userid);
  makeSolverCards($searcedSolver);
}



function makeSolverCards($solversData)
{
  echo "<script>
  $(document).ready(function() {
    $('.match').on('click', function() {
      var solverId = $(this).data('id');
      var name = $(this).data('name');
      console.log(solverId);
      console.log(name);
      var inputField = $('<input>');
      inputField.attr('name', 'solverid'); // Set name attribute
      inputField.attr('type', 'hidden');
      inputField.attr('id', 'solverid'); // Set type attribute
      inputField.val(solverId);
      $('#modal-org-name').text(name)
      $('#modal-org-name2').text(name)
      $('#seeker-id-input').append(inputField)
      $('#exampleModalLong').modal('show')
    })
  })
</script>";
  $countSolver = count($solversData);
  echo '<div style="padding:10px;"><span class="inter-font font-700 font-14">' . $countSolver . '</span><span class="inter-font font-400 font-14"> Solvers available</span>
    </div>';
  echo '<div class="solver-container">';
  foreach ($solversData as $solver) {
    echo ' <div class="card mt-2">
            <div class="card-body" style="color: black;">
              <!--- SOlver image -->
              <div class="d-flex">
                <div>
                  <svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="0.5" y="0.5" width="71" height="71" fill="#E7E7E8" />
                    <rect x="0.5" y="0.5" width="71" height="71" stroke="#E7E7E8" />
                    <path d="M48.9471 47.0534L47.0537 48.9467C46.8039 49.1951 46.466 49.3345 46.1137 49.3345C45.7615 49.3345 45.4236 49.1951 45.1737 48.9467L29.3337 33.1334C28.9002 33.259 28.4518 33.3263 28.0004 33.3334C27.1515 33.3328 26.315 33.1296 25.5604 32.7406C24.8058 32.3516 24.155 31.7881 23.6621 31.0969C23.1692 30.4058 22.8483 29.6069 22.7263 28.7668C22.6042 27.9267 22.6845 27.0696 22.9604 26.2667L26.3471 29.6534L27.0537 28.9467L28.9471 27.0534L29.6537 26.3467L26.2671 22.9601C27.0699 22.6842 27.927 22.6039 28.7671 22.726C29.6072 22.848 30.4061 23.1688 31.0972 23.6618C31.7884 24.1547 32.3519 24.8055 32.7409 25.5601C33.1299 26.3146 33.3331 27.1512 33.3337 28.0001C33.3266 28.4514 33.2594 28.8998 33.1337 29.3334L48.9471 45.1734C49.1954 45.4232 49.3348 45.7612 49.3348 46.1134C49.3348 46.4657 49.1954 46.8036 48.9471 47.0534ZM23.0537 45.1734C22.8054 45.4232 22.666 45.7612 22.666 46.1134C22.666 46.4657 22.8054 46.8036 23.0537 47.0534L24.9471 48.9467C25.1969 49.1951 25.5348 49.3345 25.8871 49.3345C26.2393 49.3345 26.5773 49.1951 26.8271 48.9467L34.1204 41.6667L30.3471 37.8934M46.6671 22.6667L41.3337 25.3334V28.0001L38.4404 30.8934L41.1071 33.5601L44.0004 30.6667H46.6671L49.3337 25.3334L46.6671 22.6667Z" fill="#012B33" />
                  </svg>
                </div>

                <div class="ml-2">
                  <!-- <h1 style="color: #012B33; font-size: 20px; font-weight: 700;line-height: 28px;"><?php echo $solver->orgname ?></h1> -->
                  <svg width="126" height="24" viewBox="0 0 126 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 17.27L18.18 21L16.54 13.97L22 9.24L14.81 8.62L12 2L9.19 8.62L2 9.24L7.45 13.97L5.82 21L12 17.27Z" fill="#F5A800" />
                    <path d="M26.7209 15.6108V14.1442L31.0412 7.31818H32.2642V9.40625H31.5185L28.6101 14.0149V14.0945H34.6406V15.6108H26.7209ZM31.5781 17.5V15.1634L31.598 14.5071V7.31818H33.3381V17.5H31.5781ZM37.0705 17.6094C36.7689 17.6094 36.5104 17.5033 36.2949 17.2912C36.0795 17.0791 35.9734 16.8205 35.9767 16.5156C35.9734 16.2173 36.0795 15.9621 36.2949 15.75C36.5104 15.5379 36.7689 15.4318 37.0705 15.4318C37.3622 15.4318 37.6157 15.5379 37.8311 15.75C38.0499 15.9621 38.1609 16.2173 38.1642 16.5156C38.1609 16.7178 38.1079 16.9018 38.0051 17.0675C37.9057 17.2332 37.7731 17.3658 37.6074 17.4652C37.445 17.5613 37.266 17.6094 37.0705 17.6094ZM40.0025 17.5V16.1676L43.5373 12.7024C43.8754 12.361 44.1571 12.0578 44.3825 11.7926C44.6078 11.5275 44.7769 11.2706 44.8896 11.022C45.0022 10.7734 45.0586 10.5083 45.0586 10.2266C45.0586 9.90507 44.9857 9.62997 44.8398 9.40128C44.694 9.16927 44.4935 8.99029 44.2383 8.86435C43.9831 8.7384 43.6931 8.67543 43.3683 8.67543C43.0335 8.67543 42.7402 8.74503 42.4883 8.88423C42.2364 9.02012 42.0408 9.21401 41.9016 9.46591C41.7657 9.7178 41.6978 10.0178 41.6978 10.3658H39.9428C39.9428 9.71946 40.0903 9.15767 40.3853 8.6804C40.6803 8.20312 41.0863 7.83357 41.6033 7.57173C42.1237 7.3099 42.7203 7.17898 43.3931 7.17898C44.0759 7.17898 44.6758 7.30658 45.1928 7.56179C45.7099 7.817 46.1109 8.16667 46.396 8.6108C46.6843 9.05492 46.8285 9.56203 46.8285 10.1321C46.8285 10.5133 46.7556 10.8878 46.6097 11.2557C46.4639 11.6236 46.207 12.0312 45.8391 12.4787C45.4746 12.9261 44.9625 13.468 44.3029 14.1044L42.5479 15.8892V15.9588H46.9826V17.5H40.0025Z" fill="#012B33" />
                    <path d="M53.4915 12.4091C53.4915 11.1562 53.6539 10.0045 53.9787 8.95383C54.3068 7.89986 54.7741 6.9304 55.3807 6.04545H56.4148C56.1761 6.37358 55.9524 6.77794 55.7436 7.25852C55.5381 7.7358 55.3575 8.26113 55.2017 8.83452C55.0459 9.40459 54.9233 9.99455 54.8338 10.6044C54.7476 11.2143 54.7045 11.8158 54.7045 12.4091C54.7045 13.1979 54.7808 13.9983 54.9332 14.8104C55.0857 15.6224 55.2912 16.3764 55.5497 17.0724C55.8082 17.7685 56.0966 18.3352 56.4148 18.7727H55.3807C54.7741 17.8878 54.3068 16.92 53.9787 15.8693C53.6539 14.8153 53.4915 13.6619 53.4915 12.4091ZM61.3677 7.17898C61.7853 7.18229 62.2029 7.26184 62.6206 7.41761C63.0382 7.57339 63.4193 7.83191 63.764 8.19318C64.1087 8.55114 64.3855 9.04001 64.5943 9.6598C64.8031 10.2796 64.9075 11.0568 64.9075 11.9915C64.9075 12.8963 64.8213 13.7 64.649 14.4027C64.4799 15.102 64.2347 15.692 63.9132 16.1726C63.595 16.6532 63.2072 17.0178 62.7498 17.2663C62.2958 17.5149 61.782 17.6392 61.2086 17.6392C60.6386 17.6392 60.1298 17.5265 59.6824 17.3011C59.2382 17.0724 58.8736 16.7559 58.5886 16.3516C58.3069 15.9439 58.1262 15.4716 58.0467 14.9347H59.2598C59.3691 15.402 59.5862 15.7881 59.911 16.093C60.2392 16.3946 60.6717 16.5455 61.2086 16.5455C61.9941 16.5455 62.6139 16.2024 63.068 15.5163C63.5254 14.8303 63.7541 13.8608 63.7541 12.608H63.6745C63.4889 12.8864 63.2685 13.1267 63.0133 13.3288C62.7581 13.531 62.4747 13.6868 62.1632 13.7962C61.8516 13.9055 61.5202 13.9602 61.1689 13.9602C60.5855 13.9602 60.0502 13.8161 59.563 13.5277C59.0791 13.236 58.6913 12.8366 58.3997 12.3295C58.1113 11.8191 57.9672 11.2358 57.9672 10.5795C57.9672 9.95644 58.1064 9.38636 58.3848 8.86932C58.6665 8.34896 59.0609 7.93466 59.568 7.62642C60.0784 7.31818 60.6783 7.16903 61.3677 7.17898ZM61.3677 8.27273C60.9501 8.27273 60.5739 8.37713 60.2392 8.58594C59.9077 8.79143 59.6442 9.06984 59.4487 9.42116C59.2565 9.76918 59.1603 10.1553 59.1603 10.5795C59.1603 11.0038 59.2531 11.3899 59.4387 11.7379C59.6277 12.0826 59.8845 12.3577 60.2093 12.5632C60.5375 12.7654 60.9103 12.8665 61.3279 12.8665C61.6428 12.8665 61.9361 12.8052 62.2079 12.6825C62.4797 12.5566 62.7167 12.3859 62.9189 12.1705C63.1243 11.9517 63.2851 11.7048 63.4011 11.4297C63.5171 11.1513 63.5751 10.8613 63.5751 10.5597C63.5751 10.1619 63.479 9.78906 63.2868 9.44105C63.0978 9.09304 62.836 8.81132 62.5012 8.59588C62.1698 8.38044 61.792 8.27273 61.3677 8.27273ZM70.82 17.5V9.86364H71.9535V11.017H72.033C72.1722 10.6392 72.4241 10.3326 72.7887 10.0973C73.1533 9.86198 73.5643 9.74432 74.0217 9.74432C74.1078 9.74432 74.2156 9.74597 74.3448 9.74929C74.4741 9.7526 74.5719 9.75758 74.6381 9.7642V10.9574C74.5984 10.9474 74.5072 10.9325 74.3647 10.9126C74.2255 10.8894 74.078 10.8778 73.9222 10.8778C73.551 10.8778 73.2196 10.9557 72.9279 11.1115C72.6396 11.264 72.4109 11.4761 72.2418 11.7479C72.0761 12.0163 71.9933 12.3229 71.9933 12.6676V17.5H70.82ZM78.9982 17.6591C78.2624 17.6591 77.6277 17.4967 77.0941 17.1719C76.5638 16.8438 76.1545 16.3864 75.8661 15.7997C75.5811 15.2098 75.4386 14.5237 75.4386 13.7415C75.4386 12.9593 75.5811 12.2699 75.8661 11.6733C76.1545 11.0734 76.5555 10.6061 77.0692 10.2713C77.5863 9.93324 78.1895 9.7642 78.8789 9.7642C79.2766 9.7642 79.6694 9.83049 80.0572 9.96307C80.445 10.0956 80.7979 10.3111 81.1161 10.6094C81.4343 10.9044 81.6879 11.2955 81.8768 11.7827C82.0657 12.2699 82.1602 12.8698 82.1602 13.5824V14.0795H76.2738V13.0653H80.967C80.967 12.6345 80.8808 12.25 80.7085 11.9119C80.5394 11.5739 80.2975 11.3071 79.9826 11.1115C79.671 10.916 79.3031 10.8182 78.8789 10.8182C78.4116 10.8182 78.0072 10.9342 77.6658 11.1662C77.3278 11.3949 77.0676 11.6932 76.8853 12.0611C76.703 12.429 76.6119 12.8234 76.6119 13.2443V13.9205C76.6119 14.4972 76.7113 14.986 76.9102 15.3871C77.1123 15.7848 77.3924 16.0881 77.7504 16.2969C78.1083 16.5024 78.5243 16.6051 78.9982 16.6051C79.3065 16.6051 79.5849 16.562 79.8335 16.4759C80.0853 16.3864 80.3024 16.2538 80.4847 16.0781C80.667 15.8991 80.8079 15.6771 80.9073 15.4119L82.0408 15.7301C81.9215 16.1146 81.721 16.4527 81.4393 16.7443C81.1576 17.0327 80.8095 17.258 80.3952 17.4205C79.9809 17.5795 79.5153 17.6591 78.9982 17.6591ZM89.9569 9.86364L87.133 17.5H85.9398L83.1159 9.86364H84.3887L86.4966 15.9489H86.5762L88.6841 9.86364H89.9569ZM91.5055 17.5V9.86364H92.6788V17.5H91.5055ZM92.1021 8.59091C91.8734 8.59091 91.6762 8.51302 91.5105 8.35724C91.3481 8.20147 91.2669 8.0142 91.2669 7.79545C91.2669 7.5767 91.3481 7.38944 91.5105 7.23366C91.6762 7.07789 91.8734 7 92.1021 7C92.3308 7 92.5263 7.07789 92.6887 7.23366C92.8545 7.38944 92.9373 7.5767 92.9373 7.79545C92.9373 8.0142 92.8545 8.20147 92.6887 8.35724C92.5263 8.51302 92.3308 8.59091 92.1021 8.59091ZM98.0295 17.6591C97.2937 17.6591 96.659 17.4967 96.1254 17.1719C95.5951 16.8438 95.1857 16.3864 94.8974 15.7997C94.6123 15.2098 94.4698 14.5237 94.4698 13.7415C94.4698 12.9593 94.6123 12.2699 94.8974 11.6733C95.1857 11.0734 95.5868 10.6061 96.1005 10.2713C96.6175 9.93324 97.2208 9.7642 97.9102 9.7642C98.3079 9.7642 98.7006 9.83049 99.0884 9.96307C99.4762 10.0956 99.8292 10.3111 100.147 10.6094C100.466 10.9044 100.719 11.2955 100.908 11.7827C101.097 12.2699 101.191 12.8698 101.191 13.5824V14.0795H95.305V13.0653H99.9982C99.9982 12.6345 99.9121 12.25 99.7397 11.9119C99.5707 11.5739 99.3287 11.3071 99.0138 11.1115C98.7023 10.916 98.3344 10.8182 97.9102 10.8182C97.4428 10.8182 97.0385 10.9342 96.6971 11.1662C96.359 11.3949 96.0988 11.6932 95.9165 12.0611C95.7343 12.429 95.6431 12.8234 95.6431 13.2443V13.9205C95.6431 14.4972 95.7425 14.986 95.9414 15.3871C96.1436 15.7848 96.4237 16.0881 96.7816 16.2969C97.1396 16.5024 97.5555 16.6051 98.0295 16.6051C98.3377 16.6051 98.6161 16.562 98.8647 16.4759C99.1166 16.3864 99.3337 16.2538 99.516 16.0781C99.6983 15.8991 99.8391 15.6771 99.9386 15.4119L101.072 15.7301C100.953 16.1146 100.752 16.4527 100.471 16.7443C100.189 17.0327 99.8408 17.258 99.4265 17.4205C99.0122 17.5795 98.5465 17.6591 98.0295 17.6591ZM104.706 17.5L102.38 9.86364H103.613L105.263 15.7102H105.343L106.973 9.86364H108.226L109.837 15.6903H109.917L111.567 9.86364H112.8L110.473 17.5H109.32L107.65 11.6335H107.53L105.86 17.5H104.706ZM119.76 11.5739L118.706 11.8722C118.64 11.6965 118.542 11.5258 118.413 11.3601C118.287 11.1911 118.115 11.0518 117.896 10.9425C117.677 10.8331 117.397 10.7784 117.056 10.7784C116.588 10.7784 116.199 10.8861 115.887 11.1016C115.579 11.3137 115.425 11.5838 115.425 11.9119C115.425 12.2036 115.531 12.4339 115.743 12.603C115.955 12.772 116.287 12.9129 116.738 13.0256L117.871 13.304C118.554 13.4697 119.063 13.7232 119.397 14.0646C119.732 14.4027 119.9 14.8385 119.9 15.3722C119.9 15.8097 119.774 16.2008 119.522 16.5455C119.273 16.8902 118.925 17.1619 118.478 17.3608C118.03 17.5597 117.51 17.6591 116.917 17.6591C116.138 17.6591 115.493 17.4901 114.983 17.152C114.472 16.8139 114.149 16.3201 114.013 15.6705L115.127 15.392C115.233 15.803 115.433 16.1113 115.728 16.3168C116.027 16.5223 116.416 16.625 116.897 16.625C117.444 16.625 117.878 16.509 118.199 16.277C118.524 16.0417 118.686 15.7599 118.686 15.4318C118.686 15.1667 118.594 14.9446 118.408 14.7656C118.222 14.5833 117.937 14.4474 117.553 14.358L116.28 14.0597C115.581 13.8939 115.067 13.6371 114.739 13.2891C114.414 12.9377 114.252 12.4986 114.252 11.9716C114.252 11.5407 114.373 11.1596 114.615 10.8281C114.86 10.4967 115.193 10.2365 115.614 10.0476C116.038 9.85866 116.519 9.7642 117.056 9.7642C117.811 9.7642 118.405 9.92992 118.836 10.2614C119.27 10.5928 119.578 11.0303 119.76 11.5739ZM124.171 13.2045C124.171 14.4574 124.007 15.6108 123.679 16.6648C123.354 17.7154 122.889 18.6832 122.282 19.5682H121.248C121.487 19.2401 121.709 18.8357 121.914 18.3551C122.123 17.8778 122.305 17.3542 122.461 16.7841C122.617 16.2107 122.738 15.6191 122.824 15.0092C122.914 14.3961 122.958 13.7945 122.958 13.2045C122.958 12.4157 122.882 11.6153 122.73 10.8033C122.577 9.99124 122.372 9.23722 122.113 8.54119C121.855 7.84517 121.566 7.27841 121.248 6.84091H122.282C122.889 7.72585 123.354 8.69531 123.679 9.74929C124.007 10.8 124.171 11.9517 124.171 13.2045Z" fill="black" fill-opacity="0.6" />
                  </svg>

                </div>
              </div>
              <!-- Suppose to be solver description -->
              <div class="my-2 ">
                <p>';

    $html = $solver->experience;
    $check = strip_tags($html);

    // Check if the paragraph length is less than 300 characters
    if (strlen($check) <= 300) {
      // Output the entire paragraph
      echo $check;
    } else {
      // Extract the first 300 characters
      $first_300_characters = substr($check, 0, 300);
      // Output the first 300 characters
      echo $first_300_characters;
    }
    echo '<span> ...</span></p>

              </div>
              <!-- Solver SKills -->
              <div class="d-flex my-2">';

    $solverskills = $solver->skills;
    $solverskills = explode(",", $solverskills);
    $solverindustries = $solver->industries;
    $solverindustries = explode(",", $solverindustries);
    $solvertechonologies = $solver->technologies;
    $solvertechonologies = explode(",", $solvertechonologies);
    $combinedArray = array_merge($solverskills, $solverindustries, $solvertechonologies);

    $displayArray = array_slice($combinedArray, 0, 2);

    // Count the remaining elements
    $remainingCount = count($combinedArray) - count($displayArray);

    // Display the first two elements
    foreach ($displayArray as $skills) {
      echo '    <div style="background-color: #E7E7E8; padding: 4px 8px 4px 8px; border-radius: 4px; margin-right: 4px; font-size: 14px; font-weight: 400;">' . ucfirst($skills) . '</div>';
    }

    // If there are more than two elements, display "+num"
    if ($remainingCount > 0) {
      echo '    <div style="background-color: #E7E7E8; padding: 4px 8px 4px 8px; border-radius: 4px; font-size: 14px; font-weight: 400;">+' . $remainingCount . '</div>';
    }
    echo '</div>
              <!--Solver location -->
              <div class="d-flex my-2 " style="align-items: center;">
                <div>
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8.0013 2.66732C9.46797 2.66732 10.668 3.86732 10.668 5.33398C10.668 6.73398 9.26797 9.00065 8.0013 10.6007C6.73464 8.93398 5.33464 6.73398 5.33464 5.33398C5.33464 3.86732 6.53464 2.66732 8.0013 2.66732ZM8.0013 1.33398C5.8013 1.33398 4.0013 3.13398 4.0013 5.33398C4.0013 8.33398 8.0013 12.6673 8.0013 12.6673C8.0013 12.6673 12.0013 8.26732 12.0013 5.33398C12.0013 3.13398 10.2013 1.33398 8.0013 1.33398ZM8.0013 4.00065C7.26797 4.00065 6.66797 4.60065 6.66797 5.33398C6.66797 6.06732 7.26797 6.66732 8.0013 6.66732C8.73464 6.66732 9.33464 6.06732 9.33464 5.33398C9.33464 4.60065 8.73464 4.00065 8.0013 4.00065ZM13.3346 12.6673C13.3346 14.134 10.9346 15.334 8.0013 15.334C5.06797 15.334 2.66797 14.134 2.66797 12.6673C2.66797 11.8007 3.46797 11.0673 4.73464 10.534L5.13464 11.134C4.46797 11.4673 4.0013 11.8673 4.0013 12.334C4.0013 13.2673 5.8013 14.0007 8.0013 14.0007C10.2013 14.0007 12.0013 13.2673 12.0013 12.334C12.0013 11.8673 11.5346 11.4673 10.8013 11.134L11.2013 10.534C12.5346 11.0673 13.3346 11.8007 13.3346 12.6673Z" fill="#012B33" />
                  </svg>
                </div>

                 
                <div class="ml-2" style="color: #012B33; font-size:14px; font-weight:600;">' . $solver->locations . ',' . $solver->city . ',' . $solver->state . '</div>


              </div>
              <!--Action buttons -->
              <div class="my-4 d-flex">
                <a href="viewSolver.php?public_solver_id=' . $solver->public_id . '">

                  <button class="viewOpportunityButton btn" style="width: 130px;height: 40px;background-color: #F5A800;padding: 8px 12px 8px 12px;font-size: 16px; font-weight: 700;border-radius: 4px;">
                    View Details
                  </button>
                </a>
                <div data-id="' . $solver->solver_id . '" data-name=" na" class="ml-2 match" style="cursor: pointer; width: 74px;height: 40px;background-color: #E7E7E8;padding: 8px 12px 8px 12px;font-size: 16px; font-weight: 700;border-radius: 4px;">
                  Match
                </div>
              </div>
            </div>
          </div>';
  }
  echo '</div>';
}
